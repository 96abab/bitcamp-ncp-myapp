<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bitcamp.myapp.dao.ClientDao">

  <resultMap type="client" id="clientMap">
    <id column="member_id" property="no"/>
    <result column="name" property="name"/>
    <result column="email" property="email"/>
    <result column="tel" property="tel"/>
    <result column="created_date" property="createdDate"/>
    <result column="degree" property="degree"/>
    <result column="school" property="school"/>
    <result column="major" property="major"/>
    <result column="wage" property="wage"/>
  </resultMap>
  
  <insert id="insert" parameterType="client" >
    insert into app_client(
      member_id,
      degree,
      school,
      major,
      wage)
    values(#{no},#{degree},#{school},#{major},#{wage})
  </insert>

  <select id="findAll" resultMap="clientMap">
    select
      m.member_id,
      m.name,
      m.tel,
      c.degree,
      c.major,
      c.wage
    from 
      app_client c
      inner join app_member m on c.member_id = m.member_id
    order by
      m.name asc
  </select>

  <select id="findByNo" parameterType="int" resultMap="clientMap">
    select
      m.member_id,
      m.name,
      m.email,
      m.tel,
      m.created_date,
      c.degree,
      c.school,
      c.major,
      c.wage
    from 
      app_client c
      inner join app_member m on c.member_id = m.member_id
    where m.member_id=#{no}
  </select>
  
  <select id="findByEmailAndPassword" parameterType="map" resultMap="clientMap">
    select
      m.member_id,
      m.name,
      m.email,
      m.tel,
      m.created_date,
      c.degree,
      c.school,
      c.major,
      c.wage
    from 
      app_client c
      inner join app_member m on c.member_id = m.member_id
    where 
      m.email = #{email}
      and m.pwd = sha2(#{password},256)
  </select>
  
  <update id="update" parameterType="client">
    update app_client set
      degree=#{degree},
      school=#{school},
      major=#{major},
      wage=#{wage}
    where member_id=#{no}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from app_client
    where member_id=#{no}
  </delete>
</mapper>





